#| label: servidor
#| context: server
# Función reactiva para filtrar los registros de presencia de mamiferos
# de acuerdo con los filtros especificados por el usuario
filtrar_mamiferos <- reactive({
# Valor inicial del objeto que va a retornarse
mamiferos_filtrados <- mamiferos
# Se realiza el filtro, solamente si el usario ha seleccionado
# una opción diferente a "Todas" en la lista de selección de especies
if (input$especie != "Todas") {
mamiferos_filtrados <-
mamiferos_filtrados |>
filter(species == input$especie)
}
# Filtro de años (lista de selección)
if (input$anio != "Todos") {
mamiferos_filtrados <-
mamiferos_filtrados |>
filter(year == input$anio)
}
# Este bloque es solo para demostrar el funcionamiento de un slider
# # Filtro de años (slider)
# Filtro de meses
if (input$mes != "Todos") {
mamiferos_filtrados <-
mamiferos_filtrados |>
filter(month == input$mes)
}
return(mamiferos_filtrados)
})
# Tabla interactiva de registros de presencia
server <- function(input, output) {
output$tabla <- renderDataTable({
# Filtrado del conjunto de datos
mamiferos <- filtrar_mamiferos()
# Tabla interactiva
mamiferos |>
st_drop_geometry() |>
select(species, locality, eventDate) |>
datatable(
rownames = FALSE,
colnames = c("Especie", "Localidad", "Fecha"),
options = list(
pageLength = 5,
language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
)
)
})
}
# Paleta de colores de riqueza de especies de orquideas
colores_riqueza_especies_mamiferos <-
colorNumeric(
palette = "Reds",
domain = regiones_union_riqueza_mamiferos_presencia$riqueza_mamiferos_regiones_presencia,
na.color = "transparent"
)
# Paleta de colores de especies de orquideas
colores_especies_mamiferos <- colorFactor(
palette = viridis(length(unique(mamiferos$species))),
domain = mamiferos$species
)
# Mapa interactivo de registros de presencia
server <- function(input, output) {
output$mapa <- renderLeaflet({
# Filtrado del conjunto de datos
mamiferos <- filtrar_mamiferos()
leaflet() |>
setView(
lng = -84.19452,
lat = 9.572735,
zoom = 7) |>
addTiles(group = "Mapa general (OpenStreetMap)") |>
addProviderTiles(
providers$Esri.WorldImagery,
group = "Imágenes satelitales (ESRI World Imagery)"
)|>
addPolygons(
data = regiones_union_riqueza_mamiferos_presencia,
fillColor = ~ colores_riqueza_especies_mamiferos(regiones_union_riqueza_mamiferos_presencia$riqueza_mamiferos_regiones_presencia
),
fillOpacity = 0.8,
color = "black",
stroke = TRUE,
weight = 1.0,
popup = paste(
paste("<strong>Area de Presencia:</strong>", regiones$region),
paste("<strong>Registros de especies:</strong>", regiones_union_riqueza_mamiferos_presencia$rriqueza_mamiferos_regiones_presencia
),
sep = '<br/>'
),
group = "Registros de especies"
) |>
addScaleBar(
position = "bottomleft",
options = scaleBarOptions(imperial = FALSE)
) |>
addLegend(
position = "bottomleft",
pal = colores_riqueza_especies_mamiferos,
values = regiones_union_riqueza_mamiferos_presencia$riqueza_mamiferos_regiones_presencia,
group = "registros de especies",
title = "Registros de especies"
)
})
}
#| label: servidor
#| context: server
# Función reactiva para filtrar los registros de presencia de mamiferos
# de acuerdo con los filtros especificados por el usuario
filtrar_mamiferos <- reactive({
# Valor inicial del objeto que va a retornarse
mamiferos_filtrados <- mamiferos
# Se realiza el filtro, solamente si el usario ha seleccionado
# una opción diferente a "Todas" en la lista de selección de especies
if (input$especie != "Todas") {
mamiferos_filtrados <-
mamiferos_filtrados |>
filter(species == input$especie)
}
# Filtro de años (lista de selección)
if (input$anio != "Todos") {
mamiferos_filtrados <-
mamiferos_filtrados |>
filter(year == input$anio)
}
# Este bloque es solo para demostrar el funcionamiento de un slider
# # Filtro de años (slider)
# Filtro de meses
if (input$mes != "Todos") {
mamiferos_filtrados <-
mamiferos_filtrados |>
filter(month == input$mes)
}
return(mamiferos_filtrados)
})
leaflet() |>
setView(
lng = -84.19452,
lat = 9.572735,
zoom = 7) |>
addTiles(group = "Mapa general (OpenStreetMap)") |>
addProviderTiles(
providers$Esri.WorldImagery,
group = "Imágenes satelitales (ESRI World Imagery)"
)|>
addPolygons(
data = regiones_union_riqueza_mamiferos_presencia,
fillColor = ~ colores_riqueza_especies_mamiferos(regiones_union_riqueza_mamiferos_presencia$riqueza_mamiferos_regiones_presencia
),
fillOpacity = 0.8,
color = "black",
stroke = TRUE,
weight = 1.0,
popup = paste(
paste("<strong>Area de Presencia:</strong>", regiones$region),
paste("<strong>Registros de especies:</strong>", regiones_union_riqueza_mamiferos_presencia$rriqueza_mamiferos_regiones_presencia
),
sep = '<br/>'
),
group = "Registros de especies"
) |>
addScaleBar(
position = "bottomleft",
options = scaleBarOptions(imperial = FALSE)
) |>
addLegend(
position = "bottomleft",
pal = colores_riqueza_especies_mamiferos,
values = regiones_union_riqueza_mamiferos_presencia$riqueza_mamiferos_regiones_presencia,
group = "registros de especies",
title = "Registros de especies"
)|>
addCircleMarkers(
data = mamiferos,
stroke = F,
radius = 4,
fillColor = ~colores_especies_mamiferos(mamiferos$species),
fillOpacity = 1.0,
popup = paste(
paste0("<strong>Especie: </strong>", mamiferos$species),
paste0("<strong>Localidad: </strong>", mamiferos$locality),
paste0("<strong>Fecha: </strong>", mamiferos$eventDate),
paste0("<strong>Fuente: </strong>", mamiferos$institutionCode),
paste0("<a href='", mamiferos$occurrenceID, "'>Más información</a>"),
sep = '<br/>'
),
group = "Registros de presencia"
)
#| label: servidor
#| context: server
# Función reactiva para filtrar los registros de presencia de mamiferos
# de acuerdo con los filtros especificados por el usuario
filtrar_mamiferos <- reactive({
# Valor inicial del objeto que va a retornarse
mamiferos_filtrados <- mamiferos
# Se realiza el filtro, solamente si el usario ha seleccionado
# una opción diferente a "Todas" en la lista de selección de especies
if (input$especie != "Todas") {
mamiferos_filtrados <-
mamiferos_filtrados |>
filter(species == input$especie)
}
# Filtro de años (lista de selección)
if (input$anio != "Todos") {
mamiferos_filtrados <-
mamiferos_filtrados |>
filter(year == input$anio)
}
# Este bloque es solo para demostrar el funcionamiento de un slider
# # Filtro de años (slider)
# Filtro de meses
if (input$mes != "Todos") {
mamiferos_filtrados <-
mamiferos_filtrados |>
filter(month == input$mes)
}
return(mamiferos_filtrados)
})
#| label: servidor
#| context: server
# Función reactiva para filtrar los registros de presencia de mamíferos
# de acuerdo con los filtros especificados por el usuario
filtrar_mamiferos <- reactive({
# Valor inicial del objeto que va a retornarse
mamiferos_filtrados <- mamiferos
# Se realiza el filtro, solamente si el usario ha seleccionado
# una opción diferente a "Todas" en la lista de selección de especies
if (input$especie != "Todas") {
mamiferos_filtrados <-
mamiferos_filtrados |>
filter(species == input$especie)
}
# Filtro de años (lista de selección)
if (input$anio != "Todos") {
mamiferos_filtrados <-
mamiferos_filtrados |>
filter(year == input$anio)
}
# Filtro de meses
if (input$mes != "Todos") {
mamiferos_filtrados <-
mamiferos_filtrados |>
filter(month == input$mes)
}
return(mamiferos_filtrados)
})
# Tabla interactiva de registros de presencia y mapa interactivo
server <- function(input, output) {
output$tabla <- renderDataTable({
# Filtrado del conjunto de datos
mamiferos <- filtrar_mamiferos()
# Tabla interactiva
mamiferos |>
st_drop_geometry() |>
select(species, locality, eventDate) |>
datatable(
rownames = FALSE,
colnames = c("Especie", "Localidad", "Fecha"),
options = list(
pageLength = 5,
language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
)
)
})
output$mapa <- renderLeaflet({
# Filtrado del conjunto de datos
mamiferos <- filtrar_mamiferos()
leaflet() |>
setView(
lng = -84.19452,
lat = 9.572735,
zoom = 7
) |>
addTiles(group = "Mapa general (OpenStreetMap)") |>
addProviderTiles(
providers$Esri.WorldImagery,
group = "Imágenes satelitales (ESRI World Imagery)"
) |>
addPolygons(
data = regiones_union_riqueza_mamiferos_presencia,
fillColor = ~ colores_riqueza_especies_mamiferos(regiones_union_riqueza_mamiferos_presencia$riqueza_mamiferos_regiones_presencia),
fillOpacity = 0.8,
color = "black",
stroke = TRUE,
weight = 1.0,
popup = paste(
paste("<strong>Area de Presencia:</strong>", regiones$region),
paste("<strong>Registros de especies:</strong>", regiones_union_riqueza_mamiferos_presencia$rriqueza_mamiferos_regiones_presencia),
sep = '<br/>'
),
group = "Registros de especies"
) |>
addScaleBar(
position = "bottomleft",
options = scaleBarOptions(imperial = FALSE)
) |>
addLegend(
position = "bottomleft",
pal = colores_riqueza_especies_mamiferos,
values = regiones_union_riqueza_mamiferos_presencia$riqueza_mamiferos_regiones_presencia,
group = "registros de especies",
title = "Registros de especies"
) |>
addCircleMarkers(
data = mamiferos,
stroke = F,
radius = 4,
fillColor = ~colores_especies_mamiferos(mamiferos$species),
fillOpacity = 1.0,
popup = paste(
paste0("<strong>Especie: </strong>", mamiferos$species),
paste0("<strong>Localidad: </strong>", mamiferos$locality),
paste0("<strong>Fecha: </strong>", mamiferos$eventDate),
paste0("<strong>Fuente: </strong>", mamiferos$institutionCode),
paste0("<a href='", mamiferos$occurrenceID, "'>Más información</a>"),
sep = '<br/>'
),
group = "Registros de presencia"
) |>
addLegend(
position = "bottomright",
pal = colores_especies_mamiferos,
values = mamiferos$species,
title = "Especies",
group = "Registros de presencia"
) |>
addLayersControl(
baseGroups = c(
"Mapa general (OpenStreetMap)",
"Imágenes satelitales (ESRI World Imagery)"
),
overlayGroups = c(
"Riqueza de especies",
"Registros de presencia"
)
) |>
addResetMapButton() |>
addSearchOSM() |>
addMouseCoordinates() |>
addFullscreenControl() |>
hideGroup("Registros de presencia")
})
}
View(mamiferos_union_regiones)
View(mamiferos_union_regiones)
View(mamiferos)
View(mamiferos)
View(mamiferos)
View(regiones_union_riqueza_mamiferos_presencia)
View(regiones_union_riqueza_mamiferos_presencia)
View(regiones_union_riqueza_mamiferos_presencia)
View(regiones_union_riqueza_mamiferos_presencia)
View(riqueza_mamiferos_regiones_presencia)
View(riqueza_mamiferos_regiones_presencia)
View(riqueza_mamiferos_regiones_presencia)
View(riqueza_mamiferos_regiones_presencia)
View(regiones_union_riqueza_mamiferos_presencia)
View(regiones_union_riqueza_mamiferos_presencia)
View(regiones_union_riqueza_mamiferos_presencia)
View(riqueza_mamiferos_regiones_presencia)
View(riqueza_mamiferos_regiones_presencia)
View(riqueza_mamiferos_regiones_presencia)
View(riqueza_mamiferos_regiones_presencia)
View(regiones_union_riqueza_mamiferos_presencia)
View(regiones_union_riqueza_mamiferos_presencia)
View(regiones)
View(regiones)
View(riqueza_mamiferos_regiones_presencia)
View(riqueza_mamiferos_regiones_presencia)
View(riqueza_mamiferos_regiones_presencia)
View(regiones_union_riqueza_mamiferos_presencia)
View(regiones_union_riqueza_mamiferos_presencia)
View(regiones_union_riqueza_mamiferos_presencia)
#| label: carga-datos 1
#| context: data
#| code-fold: true
regiones<-
st_read("regiones_socioeconomicas_simp_10m.geojson",
quiet= TRUE
) |>
st_transform(4326)
# Carga de datos de Mamiferos de Costa Rica
mamiferos <-
st_read(
"mamiferos.csv",
options = c(
"X_POSSIBLE_NAMES=decimalLongitude", # columna de longitud decimal
"Y_POSSIBLE_NAMES=decimalLatitude"   # columna de latitud decimal
),
quiet = TRUE
)
View(regiones_union_riqueza_mamiferos_presencia)
View(regiones_union_riqueza_mamiferos_presencia)
View(regiones)
View(regiones)
View(mamiferos)
View(mamiferos)
#| label: carga-paquetes
#| context: setup
#| warning: false
#| message: false
# Carga de paquetes
library(tidyverse)
library(DT)
library(plotly)
library(sf)
library(leaflet)
library(leaflet.extras)
library(leafem)
library(viridisLite)
library(shiny)
library(readr)
library(dplyr)
library(ggplot2)
library(terra)
library(ggthemes)
library(quarto)
library(rsconnect)
library(shiny)
#| label: carga-datos 1
#| context: data
#| code-fold: true
regiones<-
st_read("regiones_socioeconomicas_simp_10m.geojson",
quiet= TRUE
) |>
st_transform(4326)
# Carga de datos de Mamiferos de Costa Rica
mamiferos <-
st_read(
"mamiferos.csv",
options = c(
"X_POSSIBLE_NAMES=decimalLongitude", # columna de longitud decimal
"Y_POSSIBLE_NAMES=decimalLatitude"   # columna de latitud decimal
),
quiet = TRUE
)
# Asignación del CRS WGS84
st_crs(mamiferos) <- 4326
#Union
mamiferos_union_regiones <-
st_join(
x = mamiferos,
y = dplyr::select(regiones, region), #selección de columna codigo
join = st_within
)
# Riquezas de registros
riqueza_mamiferos_regiones_presencia <-
mamiferos_union_regiones |>
st_drop_geometry() |>
group_by(region) |>
summarize(riqueza_mamiferos_regiones_presencia = n())
# Union no espacial de regiones con el dataframe de riqueza
regiones_union_riqueza_mamiferos_presencia <-
left_join(
x = regiones,
y = riqueza_mamiferos_regiones_presencia,
by = "region"
) |>
replace_na(list(riqueza_mamiferos_regiones_presencia = 0))
#Union para tabla
mamiferos_registro <-
st_join(
x = riqueza_mamiferos_regiones_presencia,
y = dplyr::select(mamiferos, specie), #selección de columna codigo
join = st_within)
#| label: carga-datos 1
#| context: data
#| code-fold: true
regiones<-
st_read("regiones_socioeconomicas_simp_10m.geojson",
quiet= TRUE
) |>
st_transform(4326)
# Carga de datos de Mamiferos de Costa Rica
mamiferos <-
st_read(
"mamiferos.csv",
options = c(
"X_POSSIBLE_NAMES=decimalLongitude", # columna de longitud decimal
"Y_POSSIBLE_NAMES=decimalLatitude"   # columna de latitud decimal
),
quiet = TRUE
)
# Asignación del CRS WGS84
st_crs(mamiferos) <- 4326
#Union
mamiferos_union_regiones <-
st_join(
x = mamiferos,
y = dplyr::select(regiones, region), #selección de columna codigo
join = st_within
)
# Riquezas de registros
riqueza_mamiferos_regiones_presencia <-
mamiferos_union_regiones |>
st_drop_geometry() |>
group_by(region) |>
summarize(riqueza_mamiferos_regiones_presencia = n())
# Union no espacial de regiones con el dataframe de riqueza
regiones_union_riqueza_mamiferos_presencia <-
left_join(
x = regiones,
y = riqueza_mamiferos_regiones_presencia,
by = "region"
) |>
replace_na(list(riqueza_mamiferos_regiones_presencia = 0))
View(regiones)
View(regiones)
View(regiones_union_riqueza_mamiferos_presencia)
View(regiones_union_riqueza_mamiferos_presencia)
View(riqueza_mamiferos_regiones_presencia)
